[{"name":"H2(false, \"org.h2.Driver\")","description":"io.github.uinnn.database.DatabaseType.H2","location":"database-framework/io.github.uinnn.database/-database-type/-h2/index.html","searchKeys":["H2","H2(false, \"org.h2.Driver\")","io.github.uinnn.database.DatabaseType.H2"]},{"name":"MYSQL(true, \"com.mysql.jdbc.Driver\")","description":"io.github.uinnn.database.DatabaseType.MYSQL","location":"database-framework/io.github.uinnn.database/-database-type/-m-y-s-q-l/index.html","searchKeys":["MYSQL","MYSQL(true, \"com.mysql.jdbc.Driver\")","io.github.uinnn.database.DatabaseType.MYSQL"]},{"name":"POSTGRE(true, \"org.postgresql.Driver\")","description":"io.github.uinnn.database.DatabaseType.POSTGRE","location":"database-framework/io.github.uinnn.database/-database-type/-p-o-s-t-g-r-e/index.html","searchKeys":["POSTGRE","POSTGRE(true, \"org.postgresql.Driver\")","io.github.uinnn.database.DatabaseType.POSTGRE"]},{"name":"SQLITE(false, \"org.sqlite.JDBC\")","description":"io.github.uinnn.database.DatabaseType.SQLITE","location":"database-framework/io.github.uinnn.database/-database-type/-s-q-l-i-t-e/index.html","searchKeys":["SQLITE","SQLITE(false, \"org.sqlite.JDBC\")","io.github.uinnn.database.DatabaseType.SQLITE"]},{"name":"abstract class AbstractDatabasePrototype(type: DatabaseType) : DatabasePrototype","description":"io.github.uinnn.database.AbstractDatabasePrototype","location":"database-framework/io.github.uinnn.database/-abstract-database-prototype/index.html","searchKeys":["AbstractDatabasePrototype","abstract class AbstractDatabasePrototype(type: DatabaseType) : DatabasePrototype","io.github.uinnn.database.AbstractDatabasePrototype"]},{"name":"abstract class AbstractLocalDatabasePrototype(type: DatabaseType, file: File) : AbstractDatabasePrototype, LocalDatabasePrototype","description":"io.github.uinnn.database.AbstractLocalDatabasePrototype","location":"database-framework/io.github.uinnn.database/-abstract-local-database-prototype/index.html","searchKeys":["AbstractLocalDatabasePrototype","abstract class AbstractLocalDatabasePrototype(type: DatabaseType, file: File) : AbstractDatabasePrototype, LocalDatabasePrototype","io.github.uinnn.database.AbstractLocalDatabasePrototype"]},{"name":"abstract class AbstractServerDatabasePrototype(type: DatabaseType, username: String, password: String, databaseName: String, host: String, port: Int, useSSl: Boolean) : AbstractDatabasePrototype, ServerDatabasePrototype","description":"io.github.uinnn.database.AbstractServerDatabasePrototype","location":"database-framework/io.github.uinnn.database/-abstract-server-database-prototype/index.html","searchKeys":["AbstractServerDatabasePrototype","abstract class AbstractServerDatabasePrototype(type: DatabaseType, username: String, password: String, databaseName: String, host: String, port: Int, useSSl: Boolean) : AbstractDatabasePrototype, ServerDatabasePrototype","io.github.uinnn.database.AbstractServerDatabasePrototype"]},{"name":"abstract class AbstractTableManager<K, V, T : Entity<*>>(table: Table, database: Database) : TableManager<K, V, T> ","description":"io.github.uinnn.database.common.AbstractTableManager","location":"database-framework/io.github.uinnn.database.common/-abstract-table-manager/index.html","searchKeys":["AbstractTableManager","abstract class AbstractTableManager<K, V, T : Entity<*>>(table: Table, database: Database) : TableManager<K, V, T> ","io.github.uinnn.database.common.AbstractTableManager"]},{"name":"abstract class JsonColumnType<T : Any>(type: KClass<T>) : StringColumnType","description":"io.github.uinnn.database.columns.JsonColumnType","location":"database-framework/io.github.uinnn.database.columns/-json-column-type/index.html","searchKeys":["JsonColumnType","abstract class JsonColumnType<T : Any>(type: KClass<T>) : StringColumnType","io.github.uinnn.database.columns.JsonColumnType"]},{"name":"abstract class ProtocolBufferColumnType<T : Any>(type: KClass<T>) : BasicBinaryColumnType","description":"io.github.uinnn.database.columns.ProtocolBufferColumnType","location":"database-framework/io.github.uinnn.database.columns/-protocol-buffer-column-type/index.html","searchKeys":["ProtocolBufferColumnType","abstract class ProtocolBufferColumnType<T : Any>(type: KClass<T>) : BasicBinaryColumnType","io.github.uinnn.database.columns.ProtocolBufferColumnType"]},{"name":"abstract fun all(): SizedIterable<T>","description":"io.github.uinnn.database.common.TableManager.all","location":"database-framework/io.github.uinnn.database.common/-table-manager/all.html","searchKeys":["all","abstract fun all(): SizedIterable<T>","io.github.uinnn.database.common.TableManager.all"]},{"name":"abstract fun find(key: K): T?","description":"io.github.uinnn.database.common.TableManager.find","location":"database-framework/io.github.uinnn.database.common/-table-manager/find.html","searchKeys":["find","abstract fun find(key: K): T?","io.github.uinnn.database.common.TableManager.find"]},{"name":"abstract fun insert(key: K, value: V)","description":"io.github.uinnn.database.common.TableManager.insert","location":"database-framework/io.github.uinnn.database.common/-table-manager/insert.html","searchKeys":["insert","abstract fun insert(key: K, value: V)","io.github.uinnn.database.common.TableManager.insert"]},{"name":"abstract fun shutdown()","description":"io.github.uinnn.database.common.DatabaseService.shutdown","location":"database-framework/io.github.uinnn.database.common/-database-service/shutdown.html","searchKeys":["shutdown","abstract fun shutdown()","io.github.uinnn.database.common.DatabaseService.shutdown"]},{"name":"abstract fun startup()","description":"io.github.uinnn.database.common.DatabaseService.startup","location":"database-framework/io.github.uinnn.database.common/-database-service/startup.html","searchKeys":["startup","abstract fun startup()","io.github.uinnn.database.common.DatabaseService.startup"]},{"name":"abstract fun update(key: K, value: V)","description":"io.github.uinnn.database.common.TableManager.update","location":"database-framework/io.github.uinnn.database.common/-table-manager/update.html","searchKeys":["update","abstract fun update(key: K, value: V)","io.github.uinnn.database.common.TableManager.update"]},{"name":"abstract val config: HikariConfig","description":"io.github.uinnn.database.DatabasePrototype.config","location":"database-framework/io.github.uinnn.database/-database-prototype/config.html","searchKeys":["config","abstract val config: HikariConfig","io.github.uinnn.database.DatabasePrototype.config"]},{"name":"abstract val database: Database","description":"io.github.uinnn.database.DatabasePrototype.database","location":"database-framework/io.github.uinnn.database/-database-prototype/database.html","searchKeys":["database","abstract val database: Database","io.github.uinnn.database.DatabasePrototype.database"]},{"name":"abstract val database: Database","description":"io.github.uinnn.database.common.TableManager.database","location":"database-framework/io.github.uinnn.database.common/-table-manager/database.html","searchKeys":["database","abstract val database: Database","io.github.uinnn.database.common.TableManager.database"]},{"name":"abstract val source: DataSource","description":"io.github.uinnn.database.DatabasePrototype.source","location":"database-framework/io.github.uinnn.database/-database-prototype/source.html","searchKeys":["source","abstract val source: DataSource","io.github.uinnn.database.DatabasePrototype.source"]},{"name":"abstract val table: Table","description":"io.github.uinnn.database.common.TableManager.table","location":"database-framework/io.github.uinnn.database.common/-table-manager/table.html","searchKeys":["table","abstract val table: Table","io.github.uinnn.database.common.TableManager.table"]},{"name":"abstract val type: DatabaseType","description":"io.github.uinnn.database.DatabasePrototype.type","location":"database-framework/io.github.uinnn.database/-database-prototype/type.html","searchKeys":["type","abstract val type: DatabaseType","io.github.uinnn.database.DatabasePrototype.type"]},{"name":"abstract var databaseName: String","description":"io.github.uinnn.database.ServerDatabasePrototype.databaseName","location":"database-framework/io.github.uinnn.database/-server-database-prototype/database-name.html","searchKeys":["databaseName","abstract var databaseName: String","io.github.uinnn.database.ServerDatabasePrototype.databaseName"]},{"name":"abstract var file: File","description":"io.github.uinnn.database.LocalDatabasePrototype.file","location":"database-framework/io.github.uinnn.database/-local-database-prototype/file.html","searchKeys":["file","abstract var file: File","io.github.uinnn.database.LocalDatabasePrototype.file"]},{"name":"abstract var host: String","description":"io.github.uinnn.database.ServerDatabasePrototype.host","location":"database-framework/io.github.uinnn.database/-server-database-prototype/host.html","searchKeys":["host","abstract var host: String","io.github.uinnn.database.ServerDatabasePrototype.host"]},{"name":"abstract var password: String","description":"io.github.uinnn.database.ServerDatabasePrototype.password","location":"database-framework/io.github.uinnn.database/-server-database-prototype/password.html","searchKeys":["password","abstract var password: String","io.github.uinnn.database.ServerDatabasePrototype.password"]},{"name":"abstract var port: Int","description":"io.github.uinnn.database.ServerDatabasePrototype.port","location":"database-framework/io.github.uinnn.database/-server-database-prototype/port.html","searchKeys":["port","abstract var port: Int","io.github.uinnn.database.ServerDatabasePrototype.port"]},{"name":"abstract var useSSl: Boolean","description":"io.github.uinnn.database.ServerDatabasePrototype.useSSl","location":"database-framework/io.github.uinnn.database/-server-database-prototype/use-s-sl.html","searchKeys":["useSSl","abstract var useSSl: Boolean","io.github.uinnn.database.ServerDatabasePrototype.useSSl"]},{"name":"abstract var username: String","description":"io.github.uinnn.database.ServerDatabasePrototype.username","location":"database-framework/io.github.uinnn.database/-server-database-prototype/username.html","searchKeys":["username","abstract var username: String","io.github.uinnn.database.ServerDatabasePrototype.username"]},{"name":"class H2Prototype(file: File) : AbstractLocalDatabasePrototype","description":"io.github.uinnn.database.H2Prototype","location":"database-framework/io.github.uinnn.database/-h2-prototype/index.html","searchKeys":["H2Prototype","class H2Prototype(file: File) : AbstractLocalDatabasePrototype","io.github.uinnn.database.H2Prototype"]},{"name":"class LocationColumnType : ProtocolBufferLimitedColumnType<Location> ","description":"io.github.uinnn.database.columns.LocationColumnType","location":"database-framework/io.github.uinnn.database.columns/-location-column-type/index.html","searchKeys":["LocationColumnType","class LocationColumnType : ProtocolBufferLimitedColumnType<Location> ","io.github.uinnn.database.columns.LocationColumnType"]},{"name":"class MySQLPrototype(username: String, password: String, databaseName: String, host: String, port: Int, useSSl: Boolean) : AbstractServerDatabasePrototype","description":"io.github.uinnn.database.MySQLPrototype","location":"database-framework/io.github.uinnn.database/-my-s-q-l-prototype/index.html","searchKeys":["MySQLPrototype","class MySQLPrototype(username: String, password: String, databaseName: String, host: String, port: Int, useSSl: Boolean) : AbstractServerDatabasePrototype","io.github.uinnn.database.MySQLPrototype"]},{"name":"class PlayerColumnType : JsonVarcharColumnType<OfflinePlayer> ","description":"io.github.uinnn.database.columns.PlayerColumnType","location":"database-framework/io.github.uinnn.database.columns/-player-column-type/index.html","searchKeys":["PlayerColumnType","class PlayerColumnType : JsonVarcharColumnType<OfflinePlayer> ","io.github.uinnn.database.columns.PlayerColumnType"]},{"name":"class PostgrePrototype(username: String, password: String, databaseName: String, host: String, port: Int, useSSl: Boolean) : AbstractServerDatabasePrototype","description":"io.github.uinnn.database.PostgrePrototype","location":"database-framework/io.github.uinnn.database/-postgre-prototype/index.html","searchKeys":["PostgrePrototype","class PostgrePrototype(username: String, password: String, databaseName: String, host: String, port: Int, useSSl: Boolean) : AbstractServerDatabasePrototype","io.github.uinnn.database.PostgrePrototype"]},{"name":"class SQLitePrototype(file: File) : AbstractLocalDatabasePrototype","description":"io.github.uinnn.database.SQLitePrototype","location":"database-framework/io.github.uinnn.database/-s-q-lite-prototype/index.html","searchKeys":["SQLitePrototype","class SQLitePrototype(file: File) : AbstractLocalDatabasePrototype","io.github.uinnn.database.SQLitePrototype"]},{"name":"class WorldColumnType : JsonVarcharColumnType<World> ","description":"io.github.uinnn.database.columns.WorldColumnType","location":"database-framework/io.github.uinnn.database.columns/-world-column-type/index.html","searchKeys":["WorldColumnType","class WorldColumnType : JsonVarcharColumnType<World> ","io.github.uinnn.database.columns.WorldColumnType"]},{"name":"data class SerialPrototype(type: DatabaseType, username: String, password: String, host: String, database: String, port: Int, useSSL: Boolean)","description":"io.github.uinnn.database.SerialPrototype","location":"database-framework/io.github.uinnn.database/-serial-prototype/index.html","searchKeys":["SerialPrototype","data class SerialPrototype(type: DatabaseType, username: String, password: String, host: String, database: String, port: Int, useSSL: Boolean)","io.github.uinnn.database.SerialPrototype"]},{"name":"enum DatabaseType : Enum<DatabaseType> ","description":"io.github.uinnn.database.DatabaseType","location":"database-framework/io.github.uinnn.database/-database-type/index.html","searchKeys":["DatabaseType","enum DatabaseType : Enum<DatabaseType> ","io.github.uinnn.database.DatabaseType"]},{"name":"fun <K, T : Entity<*>> TableManager<K, *, T>.getAsResult(key: K): Result<T>","description":"io.github.uinnn.database.common.getAsResult","location":"database-framework/io.github.uinnn.database.common/get-as-result.html","searchKeys":["getAsResult","fun <K, T : Entity<*>> TableManager<K, *, T>.getAsResult(key: K): Result<T>","io.github.uinnn.database.common.getAsResult"]},{"name":"fun <K, V> TableManager<K, V, *>.insertAll(map: Map<K, V>)","description":"io.github.uinnn.database.common.insertAll","location":"database-framework/io.github.uinnn.database.common/insert-all.html","searchKeys":["insertAll","fun <K, V> TableManager<K, V, *>.insertAll(map: Map<K, V>)","io.github.uinnn.database.common.insertAll"]},{"name":"fun <K, V> TableManager<K, V, *>.manageInsertAll(map: Map<K, V>)","description":"io.github.uinnn.database.common.manageInsertAll","location":"database-framework/io.github.uinnn.database.common/manage-insert-all.html","searchKeys":["manageInsertAll","fun <K, V> TableManager<K, V, *>.manageInsertAll(map: Map<K, V>)","io.github.uinnn.database.common.manageInsertAll"]},{"name":"fun <K, V> TableManager<K, V, *>.manageNew(key: K, value: V)","description":"io.github.uinnn.database.common.manageNew","location":"database-framework/io.github.uinnn.database.common/manage-new.html","searchKeys":["manageNew","fun <K, V> TableManager<K, V, *>.manageNew(key: K, value: V)","io.github.uinnn.database.common.manageNew"]},{"name":"fun <K, V> TableManager<K, V, *>.manageUpdate(key: K, value: V)","description":"io.github.uinnn.database.common.manageUpdate","location":"database-framework/io.github.uinnn.database.common/manage-update.html","searchKeys":["manageUpdate","fun <K, V> TableManager<K, V, *>.manageUpdate(key: K, value: V)","io.github.uinnn.database.common.manageUpdate"]},{"name":"fun <K, V> TableManager<K, V, *>.manageUpdateAll(map: Map<K, V>)","description":"io.github.uinnn.database.common.manageUpdateAll","location":"database-framework/io.github.uinnn.database.common/manage-update-all.html","searchKeys":["manageUpdateAll","fun <K, V> TableManager<K, V, *>.manageUpdateAll(map: Map<K, V>)","io.github.uinnn.database.common.manageUpdateAll"]},{"name":"fun <K, V> TableManager<K, V, *>.manageUpdateOrInsert(key: K, value: V)","description":"io.github.uinnn.database.common.manageUpdateOrInsert","location":"database-framework/io.github.uinnn.database.common/manage-update-or-insert.html","searchKeys":["manageUpdateOrInsert","fun <K, V> TableManager<K, V, *>.manageUpdateOrInsert(key: K, value: V)","io.github.uinnn.database.common.manageUpdateOrInsert"]},{"name":"fun <K, V> TableManager<K, V, *>.manageUpdateOrInsertAll(map: Map<K, V>)","description":"io.github.uinnn.database.common.manageUpdateOrInsertAll","location":"database-framework/io.github.uinnn.database.common/manage-update-or-insert-all.html","searchKeys":["manageUpdateOrInsertAll","fun <K, V> TableManager<K, V, *>.manageUpdateOrInsertAll(map: Map<K, V>)","io.github.uinnn.database.common.manageUpdateOrInsertAll"]},{"name":"fun <K, V> TableManager<K, V, *>.updateAll(map: Map<K, V>)","description":"io.github.uinnn.database.common.updateAll","location":"database-framework/io.github.uinnn.database.common/update-all.html","searchKeys":["updateAll","fun <K, V> TableManager<K, V, *>.updateAll(map: Map<K, V>)","io.github.uinnn.database.common.updateAll"]},{"name":"fun <K, V> TableManager<K, V, *>.updateOrInsertAll(map: Map<K, V>)","description":"io.github.uinnn.database.common.updateOrInsertAll","location":"database-framework/io.github.uinnn.database.common/update-or-insert-all.html","searchKeys":["updateOrInsertAll","fun <K, V> TableManager<K, V, *>.updateOrInsertAll(map: Map<K, V>)","io.github.uinnn.database.common.updateOrInsertAll"]},{"name":"fun <K> TableManager<K, *, *>.delete(key: K)","description":"io.github.uinnn.database.common.delete","location":"database-framework/io.github.uinnn.database.common/delete.html","searchKeys":["delete","fun <K> TableManager<K, *, *>.delete(key: K)","io.github.uinnn.database.common.delete"]},{"name":"fun <K> TableManager<K, *, *>.manageDelete(key: K)","description":"io.github.uinnn.database.common.manageDelete","location":"database-framework/io.github.uinnn.database.common/manage-delete.html","searchKeys":["manageDelete","fun <K> TableManager<K, *, *>.manageDelete(key: K)","io.github.uinnn.database.common.manageDelete"]},{"name":"fun <T : Any> JsonColumnType(type: KClass<T>)","description":"io.github.uinnn.database.columns.JsonColumnType.JsonColumnType","location":"database-framework/io.github.uinnn.database.columns/-json-column-type/-json-column-type.html","searchKeys":["JsonColumnType","fun <T : Any> JsonColumnType(type: KClass<T>)","io.github.uinnn.database.columns.JsonColumnType.JsonColumnType"]},{"name":"fun <T : Any> JsonTextColumnType(type: KClass<T>)","description":"io.github.uinnn.database.columns.JsonTextColumnType.JsonTextColumnType","location":"database-framework/io.github.uinnn.database.columns/-json-text-column-type/-json-text-column-type.html","searchKeys":["JsonTextColumnType","fun <T : Any> JsonTextColumnType(type: KClass<T>)","io.github.uinnn.database.columns.JsonTextColumnType.JsonTextColumnType"]},{"name":"fun <T : Any> JsonVarcharColumnType(length: Int, type: KClass<T>)","description":"io.github.uinnn.database.columns.JsonVarcharColumnType.JsonVarcharColumnType","location":"database-framework/io.github.uinnn.database.columns/-json-varchar-column-type/-json-varchar-column-type.html","searchKeys":["JsonVarcharColumnType","fun <T : Any> JsonVarcharColumnType(length: Int, type: KClass<T>)","io.github.uinnn.database.columns.JsonVarcharColumnType.JsonVarcharColumnType"]},{"name":"fun <T : Any> ProtocolBufferColumnType(type: KClass<T>)","description":"io.github.uinnn.database.columns.ProtocolBufferColumnType.ProtocolBufferColumnType","location":"database-framework/io.github.uinnn.database.columns/-protocol-buffer-column-type/-protocol-buffer-column-type.html","searchKeys":["ProtocolBufferColumnType","fun <T : Any> ProtocolBufferColumnType(type: KClass<T>)","io.github.uinnn.database.columns.ProtocolBufferColumnType.ProtocolBufferColumnType"]},{"name":"fun <T : Any> ProtocolBufferLimitedColumnType(length: Int, type: KClass<T>)","description":"io.github.uinnn.database.columns.ProtocolBufferLimitedColumnType.ProtocolBufferLimitedColumnType","location":"database-framework/io.github.uinnn.database.columns/-protocol-buffer-limited-column-type/-protocol-buffer-limited-column-type.html","searchKeys":["ProtocolBufferLimitedColumnType","fun <T : Any> ProtocolBufferLimitedColumnType(length: Int, type: KClass<T>)","io.github.uinnn.database.columns.ProtocolBufferLimitedColumnType.ProtocolBufferLimitedColumnType"]},{"name":"fun <T : Any> ProtocolBufferUnlimitedColumnType(type: KClass<T>)","description":"io.github.uinnn.database.columns.ProtocolBufferUnlimitedColumnType.ProtocolBufferUnlimitedColumnType","location":"database-framework/io.github.uinnn.database.columns/-protocol-buffer-unlimited-column-type/-protocol-buffer-unlimited-column-type.html","searchKeys":["ProtocolBufferUnlimitedColumnType","fun <T : Any> ProtocolBufferUnlimitedColumnType(type: KClass<T>)","io.github.uinnn.database.columns.ProtocolBufferUnlimitedColumnType.ProtocolBufferUnlimitedColumnType"]},{"name":"fun <T : Any> Table.json(name: String, length: Int, type: KClass<T>): Column<T>","description":"io.github.uinnn.database.columns.json","location":"database-framework/io.github.uinnn.database.columns/json.html","searchKeys":["json","fun <T : Any> Table.json(name: String, length: Int, type: KClass<T>): Column<T>","io.github.uinnn.database.columns.json"]},{"name":"fun <T : Any> Table.json(name: String, type: KClass<T>): Column<T>","description":"io.github.uinnn.database.columns.json","location":"database-framework/io.github.uinnn.database.columns/json.html","searchKeys":["json","fun <T : Any> Table.json(name: String, type: KClass<T>): Column<T>","io.github.uinnn.database.columns.json"]},{"name":"fun <T : Any> Table.protobuf(name: String, length: Int, type: KClass<T>): Column<T>","description":"io.github.uinnn.database.columns.protobuf","location":"database-framework/io.github.uinnn.database.columns/protobuf.html","searchKeys":["protobuf","fun <T : Any> Table.protobuf(name: String, length: Int, type: KClass<T>): Column<T>","io.github.uinnn.database.columns.protobuf"]},{"name":"fun <T : Any> Table.protobuf(name: String, type: KClass<T>): Column<T>","description":"io.github.uinnn.database.columns.protobuf","location":"database-framework/io.github.uinnn.database.columns/protobuf.html","searchKeys":["protobuf","fun <T : Any> Table.protobuf(name: String, type: KClass<T>): Column<T>","io.github.uinnn.database.columns.protobuf"]},{"name":"fun <T> Database.lazyManagement(action: Management<T>): Job","description":"io.github.uinnn.database.common.lazyManagement","location":"database-framework/io.github.uinnn.database.common/lazy-management.html","searchKeys":["lazyManagement","fun <T> Database.lazyManagement(action: Management<T>): Job","io.github.uinnn.database.common.lazyManagement"]},{"name":"fun <T> Database.lazyManagementAsync(action: Management<T>): Deferred<T>","description":"io.github.uinnn.database.common.lazyManagementAsync","location":"database-framework/io.github.uinnn.database.common/lazy-management-async.html","searchKeys":["lazyManagementAsync","fun <T> Database.lazyManagementAsync(action: Management<T>): Deferred<T>","io.github.uinnn.database.common.lazyManagementAsync"]},{"name":"fun <T> Database.management(action: Management<T>): Job","description":"io.github.uinnn.database.common.management","location":"database-framework/io.github.uinnn.database.common/management.html","searchKeys":["management","fun <T> Database.management(action: Management<T>): Job","io.github.uinnn.database.common.management"]},{"name":"fun <T> Database.managementAsync(action: Management<T>): Deferred<T>","description":"io.github.uinnn.database.common.managementAsync","location":"database-framework/io.github.uinnn.database.common/management-async.html","searchKeys":["managementAsync","fun <T> Database.managementAsync(action: Management<T>): Deferred<T>","io.github.uinnn.database.common.managementAsync"]},{"name":"fun <T> lazyManagement(database: Database, action: Management<T>): Job","description":"io.github.uinnn.database.common.DatabaseScope.lazyManagement","location":"database-framework/io.github.uinnn.database.common/-database-scope/lazy-management.html","searchKeys":["lazyManagement","fun <T> lazyManagement(database: Database, action: Management<T>): Job","io.github.uinnn.database.common.DatabaseScope.lazyManagement"]},{"name":"fun <T> lazyManagementAsync(database: Database, action: Management<T>): Deferred<T>","description":"io.github.uinnn.database.common.DatabaseScope.lazyManagementAsync","location":"database-framework/io.github.uinnn.database.common/-database-scope/lazy-management-async.html","searchKeys":["lazyManagementAsync","fun <T> lazyManagementAsync(database: Database, action: Management<T>): Deferred<T>","io.github.uinnn.database.common.DatabaseScope.lazyManagementAsync"]},{"name":"fun <T> management(database: Database, action: Management<T>): Job","description":"io.github.uinnn.database.common.DatabaseScope.management","location":"database-framework/io.github.uinnn.database.common/-database-scope/management.html","searchKeys":["management","fun <T> management(database: Database, action: Management<T>): Job","io.github.uinnn.database.common.DatabaseScope.management"]},{"name":"fun <T> managementAsync(database: Database, action: Management<T>): Deferred<T>","description":"io.github.uinnn.database.common.DatabaseScope.managementAsync","location":"database-framework/io.github.uinnn.database.common/-database-scope/management-async.html","searchKeys":["managementAsync","fun <T> managementAsync(database: Database, action: Management<T>): Deferred<T>","io.github.uinnn.database.common.DatabaseScope.managementAsync"]},{"name":"fun AbstractDatabasePrototype(type: DatabaseType)","description":"io.github.uinnn.database.AbstractDatabasePrototype.AbstractDatabasePrototype","location":"database-framework/io.github.uinnn.database/-abstract-database-prototype/-abstract-database-prototype.html","searchKeys":["AbstractDatabasePrototype","fun AbstractDatabasePrototype(type: DatabaseType)","io.github.uinnn.database.AbstractDatabasePrototype.AbstractDatabasePrototype"]},{"name":"fun AbstractLocalDatabasePrototype(type: DatabaseType, file: File)","description":"io.github.uinnn.database.AbstractLocalDatabasePrototype.AbstractLocalDatabasePrototype","location":"database-framework/io.github.uinnn.database/-abstract-local-database-prototype/-abstract-local-database-prototype.html","searchKeys":["AbstractLocalDatabasePrototype","fun AbstractLocalDatabasePrototype(type: DatabaseType, file: File)","io.github.uinnn.database.AbstractLocalDatabasePrototype.AbstractLocalDatabasePrototype"]},{"name":"fun AbstractServerDatabasePrototype(type: DatabaseType, username: String, password: String, databaseName: String, host: String, port: Int = 3306, useSSl: Boolean = false)","description":"io.github.uinnn.database.AbstractServerDatabasePrototype.AbstractServerDatabasePrototype","location":"database-framework/io.github.uinnn.database/-abstract-server-database-prototype/-abstract-server-database-prototype.html","searchKeys":["AbstractServerDatabasePrototype","fun AbstractServerDatabasePrototype(type: DatabaseType, username: String, password: String, databaseName: String, host: String, port: Int = 3306, useSSl: Boolean = false)","io.github.uinnn.database.AbstractServerDatabasePrototype.AbstractServerDatabasePrototype"]},{"name":"fun AbstractTableManager(table: Table, database: Database)","description":"io.github.uinnn.database.common.AbstractTableManager.AbstractTableManager","location":"database-framework/io.github.uinnn.database.common/-abstract-table-manager/-abstract-table-manager.html","searchKeys":["AbstractTableManager","fun AbstractTableManager(table: Table, database: Database)","io.github.uinnn.database.common.AbstractTableManager.AbstractTableManager"]},{"name":"fun H2Prototype(file: File)","description":"io.github.uinnn.database.H2Prototype.H2Prototype","location":"database-framework/io.github.uinnn.database/-h2-prototype/-h2-prototype.html","searchKeys":["H2Prototype","fun H2Prototype(file: File)","io.github.uinnn.database.H2Prototype.H2Prototype"]},{"name":"fun LocationColumnType()","description":"io.github.uinnn.database.columns.LocationColumnType.LocationColumnType","location":"database-framework/io.github.uinnn.database.columns/-location-column-type/-location-column-type.html","searchKeys":["LocationColumnType","fun LocationColumnType()","io.github.uinnn.database.columns.LocationColumnType.LocationColumnType"]},{"name":"fun MySQLPrototype(username: String, password: String, databaseName: String, host: String, port: Int = 3306, useSSl: Boolean = false)","description":"io.github.uinnn.database.MySQLPrototype.MySQLPrototype","location":"database-framework/io.github.uinnn.database/-my-s-q-l-prototype/-my-s-q-l-prototype.html","searchKeys":["MySQLPrototype","fun MySQLPrototype(username: String, password: String, databaseName: String, host: String, port: Int = 3306, useSSl: Boolean = false)","io.github.uinnn.database.MySQLPrototype.MySQLPrototype"]},{"name":"fun PlayerColumnType()","description":"io.github.uinnn.database.columns.PlayerColumnType.PlayerColumnType","location":"database-framework/io.github.uinnn.database.columns/-player-column-type/-player-column-type.html","searchKeys":["PlayerColumnType","fun PlayerColumnType()","io.github.uinnn.database.columns.PlayerColumnType.PlayerColumnType"]},{"name":"fun PostgrePrototype(username: String, password: String, databaseName: String, host: String, port: Int = 3306, useSSl: Boolean = false)","description":"io.github.uinnn.database.PostgrePrototype.PostgrePrototype","location":"database-framework/io.github.uinnn.database/-postgre-prototype/-postgre-prototype.html","searchKeys":["PostgrePrototype","fun PostgrePrototype(username: String, password: String, databaseName: String, host: String, port: Int = 3306, useSSl: Boolean = false)","io.github.uinnn.database.PostgrePrototype.PostgrePrototype"]},{"name":"fun SQLitePrototype(file: File)","description":"io.github.uinnn.database.SQLitePrototype.SQLitePrototype","location":"database-framework/io.github.uinnn.database/-s-q-lite-prototype/-s-q-lite-prototype.html","searchKeys":["SQLitePrototype","fun SQLitePrototype(file: File)","io.github.uinnn.database.SQLitePrototype.SQLitePrototype"]},{"name":"fun SerialPrototype(type: DatabaseType = DatabaseType.SQLITE, username: String = \"root\", password: String = \"\", host: String = \"localhost\", database: String = \"\", port: Int = 3306, useSSL: Boolean = false)","description":"io.github.uinnn.database.SerialPrototype.SerialPrototype","location":"database-framework/io.github.uinnn.database/-serial-prototype/-serial-prototype.html","searchKeys":["SerialPrototype","fun SerialPrototype(type: DatabaseType = DatabaseType.SQLITE, username: String = \"root\", password: String = \"\", host: String = \"localhost\", database: String = \"\", port: Int = 3306, useSSL: Boolean = false)","io.github.uinnn.database.SerialPrototype.SerialPrototype"]},{"name":"fun SerialPrototype.asLocalPrototype(file: File): LocalDatabasePrototype","description":"io.github.uinnn.database.asLocalPrototype","location":"database-framework/io.github.uinnn.database/as-local-prototype.html","searchKeys":["asLocalPrototype","fun SerialPrototype.asLocalPrototype(file: File): LocalDatabasePrototype","io.github.uinnn.database.asLocalPrototype"]},{"name":"fun SerialPrototype.asPrototype(file: File? = null): DatabasePrototype","description":"io.github.uinnn.database.asPrototype","location":"database-framework/io.github.uinnn.database/as-prototype.html","searchKeys":["asPrototype","fun SerialPrototype.asPrototype(file: File? = null): DatabasePrototype","io.github.uinnn.database.asPrototype"]},{"name":"fun SerialPrototype.asServerPrototype(): ServerDatabasePrototype","description":"io.github.uinnn.database.asServerPrototype","location":"database-framework/io.github.uinnn.database/as-server-prototype.html","searchKeys":["asServerPrototype","fun SerialPrototype.asServerPrototype(): ServerDatabasePrototype","io.github.uinnn.database.asServerPrototype"]},{"name":"fun Table.location(name: String): Column<Location>","description":"io.github.uinnn.database.columns.location","location":"database-framework/io.github.uinnn.database.columns/location.html","searchKeys":["location","fun Table.location(name: String): Column<Location>","io.github.uinnn.database.columns.location"]},{"name":"fun Table.player(name: String): Column<OfflinePlayer>","description":"io.github.uinnn.database.columns.player","location":"database-framework/io.github.uinnn.database.columns/player.html","searchKeys":["player","fun Table.player(name: String): Column<OfflinePlayer>","io.github.uinnn.database.columns.player"]},{"name":"fun Table.world(name: String): Column<World>","description":"io.github.uinnn.database.columns.world","location":"database-framework/io.github.uinnn.database.columns/world.html","searchKeys":["world","fun Table.world(name: String): Column<World>","io.github.uinnn.database.columns.world"]},{"name":"fun TableManager<*, *, *>.create()","description":"io.github.uinnn.database.common.create","location":"database-framework/io.github.uinnn.database.common/create.html","searchKeys":["create","fun TableManager<*, *, *>.create()","io.github.uinnn.database.common.create"]},{"name":"fun TableManager<*, *, *>.deleteAll(): Int","description":"io.github.uinnn.database.common.deleteAll","location":"database-framework/io.github.uinnn.database.common/delete-all.html","searchKeys":["deleteAll","fun TableManager<*, *, *>.deleteAll(): Int","io.github.uinnn.database.common.deleteAll"]},{"name":"fun TableManager<*, *, *>.deleteIf(limit: Int? = null, offset: Long? = null, action: SQLExpression): Int","description":"io.github.uinnn.database.common.deleteIf","location":"database-framework/io.github.uinnn.database.common/delete-if.html","searchKeys":["deleteIf","fun TableManager<*, *, *>.deleteIf(limit: Int? = null, offset: Long? = null, action: SQLExpression): Int","io.github.uinnn.database.common.deleteIf"]},{"name":"fun TableManager<*, *, *>.manageCreate()","description":"io.github.uinnn.database.common.manageCreate","location":"database-framework/io.github.uinnn.database.common/manage-create.html","searchKeys":["manageCreate","fun TableManager<*, *, *>.manageCreate()","io.github.uinnn.database.common.manageCreate"]},{"name":"fun TableManager<*, *, *>.manageDeleteAll()","description":"io.github.uinnn.database.common.manageDeleteAll","location":"database-framework/io.github.uinnn.database.common/manage-delete-all.html","searchKeys":["manageDeleteAll","fun TableManager<*, *, *>.manageDeleteAll()","io.github.uinnn.database.common.manageDeleteAll"]},{"name":"fun TableManager<*, *, *>.manageDeleteIf(limit: Int? = null, offset: Long? = null, action: SQLExpression)","description":"io.github.uinnn.database.common.manageDeleteIf","location":"database-framework/io.github.uinnn.database.common/manage-delete-if.html","searchKeys":["manageDeleteIf","fun TableManager<*, *, *>.manageDeleteIf(limit: Int? = null, offset: Long? = null, action: SQLExpression)","io.github.uinnn.database.common.manageDeleteIf"]},{"name":"fun TableManager<*, *, *>.selectAll(): Query","description":"io.github.uinnn.database.common.selectAll","location":"database-framework/io.github.uinnn.database.common/select-all.html","searchKeys":["selectAll","fun TableManager<*, *, *>.selectAll(): Query","io.github.uinnn.database.common.selectAll"]},{"name":"fun WorldColumnType()","description":"io.github.uinnn.database.columns.WorldColumnType.WorldColumnType","location":"database-framework/io.github.uinnn.database.columns/-world-column-type/-world-column-type.html","searchKeys":["WorldColumnType","fun WorldColumnType()","io.github.uinnn.database.columns.WorldColumnType.WorldColumnType"]},{"name":"fun create(builder: ConfigurationBuilder): HikariConfig","description":"io.github.uinnn.database.factory.ConfigurationFactory.create","location":"database-framework/io.github.uinnn.database.factory/-configuration-factory/create.html","searchKeys":["create","fun create(builder: ConfigurationBuilder): HikariConfig","io.github.uinnn.database.factory.ConfigurationFactory.create"]},{"name":"fun createH2Prototype(file: File): LocalDatabasePrototype","description":"io.github.uinnn.database.factory.PrototypeFactory.createH2Prototype","location":"database-framework/io.github.uinnn.database.factory/-prototype-factory/create-h2-prototype.html","searchKeys":["createH2Prototype","fun createH2Prototype(file: File): LocalDatabasePrototype","io.github.uinnn.database.factory.PrototypeFactory.createH2Prototype"]},{"name":"fun createMySQLPrototype(serial: SerialPrototype): ServerDatabasePrototype","description":"io.github.uinnn.database.factory.PrototypeFactory.createMySQLPrototype","location":"database-framework/io.github.uinnn.database.factory/-prototype-factory/create-my-s-q-l-prototype.html","searchKeys":["createMySQLPrototype","fun createMySQLPrototype(serial: SerialPrototype): ServerDatabasePrototype","io.github.uinnn.database.factory.PrototypeFactory.createMySQLPrototype"]},{"name":"fun createMySQLPrototype(username: String, password: String, databaseName: String, host: String, port: Int = 3306, useSSL: Boolean = false): ServerDatabasePrototype","description":"io.github.uinnn.database.factory.PrototypeFactory.createMySQLPrototype","location":"database-framework/io.github.uinnn.database.factory/-prototype-factory/create-my-s-q-l-prototype.html","searchKeys":["createMySQLPrototype","fun createMySQLPrototype(username: String, password: String, databaseName: String, host: String, port: Int = 3306, useSSL: Boolean = false): ServerDatabasePrototype","io.github.uinnn.database.factory.PrototypeFactory.createMySQLPrototype"]},{"name":"fun createPostgrePrototype(serial: SerialPrototype): ServerDatabasePrototype","description":"io.github.uinnn.database.factory.PrototypeFactory.createPostgrePrototype","location":"database-framework/io.github.uinnn.database.factory/-prototype-factory/create-postgre-prototype.html","searchKeys":["createPostgrePrototype","fun createPostgrePrototype(serial: SerialPrototype): ServerDatabasePrototype","io.github.uinnn.database.factory.PrototypeFactory.createPostgrePrototype"]},{"name":"fun createPostgrePrototype(username: String, password: String, databaseName: String, host: String, port: Int = 3306, useSSL: Boolean = false): ServerDatabasePrototype","description":"io.github.uinnn.database.factory.PrototypeFactory.createPostgrePrototype","location":"database-framework/io.github.uinnn.database.factory/-prototype-factory/create-postgre-prototype.html","searchKeys":["createPostgrePrototype","fun createPostgrePrototype(username: String, password: String, databaseName: String, host: String, port: Int = 3306, useSSL: Boolean = false): ServerDatabasePrototype","io.github.uinnn.database.factory.PrototypeFactory.createPostgrePrototype"]},{"name":"fun createSQLitePrototype(file: File): LocalDatabasePrototype","description":"io.github.uinnn.database.factory.PrototypeFactory.createSQLitePrototype","location":"database-framework/io.github.uinnn.database.factory/-prototype-factory/create-s-q-lite-prototype.html","searchKeys":["createSQLitePrototype","fun createSQLitePrototype(file: File): LocalDatabasePrototype","io.github.uinnn.database.factory.PrototypeFactory.createSQLitePrototype"]},{"name":"fun of(type: DatabaseType, builder: ConfigurationBuilder): HikariConfig","description":"io.github.uinnn.database.factory.ConfigurationFactory.of","location":"database-framework/io.github.uinnn.database.factory/-configuration-factory/of.html","searchKeys":["of","fun of(type: DatabaseType, builder: ConfigurationBuilder): HikariConfig","io.github.uinnn.database.factory.ConfigurationFactory.of"]},{"name":"inline fun <T : Any> Table.json(name: String): Column<T>","description":"io.github.uinnn.database.columns.json","location":"database-framework/io.github.uinnn.database.columns/json.html","searchKeys":["json","inline fun <T : Any> Table.json(name: String): Column<T>","io.github.uinnn.database.columns.json"]},{"name":"inline fun <T : Any> Table.json(name: String, length: Int): Column<T>","description":"io.github.uinnn.database.columns.json","location":"database-framework/io.github.uinnn.database.columns/json.html","searchKeys":["json","inline fun <T : Any> Table.json(name: String, length: Int): Column<T>","io.github.uinnn.database.columns.json"]},{"name":"inline fun <T : Any> Table.protobuf(name: String): Column<T>","description":"io.github.uinnn.database.columns.protobuf","location":"database-framework/io.github.uinnn.database.columns/protobuf.html","searchKeys":["protobuf","inline fun <T : Any> Table.protobuf(name: String): Column<T>","io.github.uinnn.database.columns.protobuf"]},{"name":"inline fun <T : Any> Table.protobuf(name: String, length: Int): Column<T>","description":"io.github.uinnn.database.columns.protobuf","location":"database-framework/io.github.uinnn.database.columns/protobuf.html","searchKeys":["protobuf","inline fun <T : Any> Table.protobuf(name: String, length: Int): Column<T>","io.github.uinnn.database.columns.protobuf"]},{"name":"interface DatabasePrototype","description":"io.github.uinnn.database.DatabasePrototype","location":"database-framework/io.github.uinnn.database/-database-prototype/index.html","searchKeys":["DatabasePrototype","interface DatabasePrototype","io.github.uinnn.database.DatabasePrototype"]},{"name":"interface DatabaseService","description":"io.github.uinnn.database.common.DatabaseService","location":"database-framework/io.github.uinnn.database.common/-database-service/index.html","searchKeys":["DatabaseService","interface DatabaseService","io.github.uinnn.database.common.DatabaseService"]},{"name":"interface LocalDatabasePrototype : DatabasePrototype","description":"io.github.uinnn.database.LocalDatabasePrototype","location":"database-framework/io.github.uinnn.database/-local-database-prototype/index.html","searchKeys":["LocalDatabasePrototype","interface LocalDatabasePrototype : DatabasePrototype","io.github.uinnn.database.LocalDatabasePrototype"]},{"name":"interface ServerDatabasePrototype : DatabasePrototype","description":"io.github.uinnn.database.ServerDatabasePrototype","location":"database-framework/io.github.uinnn.database/-server-database-prototype/index.html","searchKeys":["ServerDatabasePrototype","interface ServerDatabasePrototype : DatabasePrototype","io.github.uinnn.database.ServerDatabasePrototype"]},{"name":"interface TableManager<K, V, T : Entity<*>>","description":"io.github.uinnn.database.common.TableManager","location":"database-framework/io.github.uinnn.database.common/-table-manager/index.html","searchKeys":["TableManager","interface TableManager<K, V, T : Entity<*>>","io.github.uinnn.database.common.TableManager"]},{"name":"object ConfigurationFactory","description":"io.github.uinnn.database.factory.ConfigurationFactory","location":"database-framework/io.github.uinnn.database.factory/-configuration-factory/index.html","searchKeys":["ConfigurationFactory","object ConfigurationFactory","io.github.uinnn.database.factory.ConfigurationFactory"]},{"name":"object DatabaseScope : CoroutineScope","description":"io.github.uinnn.database.common.DatabaseScope","location":"database-framework/io.github.uinnn.database.common/-database-scope/index.html","searchKeys":["DatabaseScope","object DatabaseScope : CoroutineScope","io.github.uinnn.database.common.DatabaseScope"]},{"name":"object PrototypeFactory","description":"io.github.uinnn.database.factory.PrototypeFactory","location":"database-framework/io.github.uinnn.database.factory/-prototype-factory/index.html","searchKeys":["PrototypeFactory","object PrototypeFactory","io.github.uinnn.database.factory.PrototypeFactory"]},{"name":"open class JsonTextColumnType<T : Any>(type: KClass<T>) : JsonColumnType<T> ","description":"io.github.uinnn.database.columns.JsonTextColumnType","location":"database-framework/io.github.uinnn.database.columns/-json-text-column-type/index.html","searchKeys":["JsonTextColumnType","open class JsonTextColumnType<T : Any>(type: KClass<T>) : JsonColumnType<T> ","io.github.uinnn.database.columns.JsonTextColumnType"]},{"name":"open class JsonVarcharColumnType<T : Any>(length: Int, type: KClass<T>) : JsonColumnType<T> ","description":"io.github.uinnn.database.columns.JsonVarcharColumnType","location":"database-framework/io.github.uinnn.database.columns/-json-varchar-column-type/index.html","searchKeys":["JsonVarcharColumnType","open class JsonVarcharColumnType<T : Any>(length: Int, type: KClass<T>) : JsonColumnType<T> ","io.github.uinnn.database.columns.JsonVarcharColumnType"]},{"name":"open class ProtocolBufferLimitedColumnType<T : Any>(length: Int, type: KClass<T>) : ProtocolBufferColumnType<T> ","description":"io.github.uinnn.database.columns.ProtocolBufferLimitedColumnType","location":"database-framework/io.github.uinnn.database.columns/-protocol-buffer-limited-column-type/index.html","searchKeys":["ProtocolBufferLimitedColumnType","open class ProtocolBufferLimitedColumnType<T : Any>(length: Int, type: KClass<T>) : ProtocolBufferColumnType<T> ","io.github.uinnn.database.columns.ProtocolBufferLimitedColumnType"]},{"name":"open class ProtocolBufferUnlimitedColumnType<T : Any>(type: KClass<T>) : ProtocolBufferColumnType<T> ","description":"io.github.uinnn.database.columns.ProtocolBufferUnlimitedColumnType","location":"database-framework/io.github.uinnn.database.columns/-protocol-buffer-unlimited-column-type/index.html","searchKeys":["ProtocolBufferUnlimitedColumnType","open class ProtocolBufferUnlimitedColumnType<T : Any>(type: KClass<T>) : ProtocolBufferColumnType<T> ","io.github.uinnn.database.columns.ProtocolBufferUnlimitedColumnType"]},{"name":"open fun updateOrInsert(key: K, value: V)","description":"io.github.uinnn.database.common.TableManager.updateOrInsert","location":"database-framework/io.github.uinnn.database.common/-table-manager/update-or-insert.html","searchKeys":["updateOrInsert","open fun updateOrInsert(key: K, value: V)","io.github.uinnn.database.common.TableManager.updateOrInsert"]},{"name":"open override fun nonNullValueToString(value: Any): String","description":"io.github.uinnn.database.columns.JsonColumnType.nonNullValueToString","location":"database-framework/io.github.uinnn.database.columns/-json-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: Any): String","io.github.uinnn.database.columns.JsonColumnType.nonNullValueToString"]},{"name":"open override fun nonNullValueToString(value: Any): String","description":"io.github.uinnn.database.columns.ProtocolBufferColumnType.nonNullValueToString","location":"database-framework/io.github.uinnn.database.columns/-protocol-buffer-column-type/non-null-value-to-string.html","searchKeys":["nonNullValueToString","open override fun nonNullValueToString(value: Any): String","io.github.uinnn.database.columns.ProtocolBufferColumnType.nonNullValueToString"]},{"name":"open override fun notNullValueToDB(value: Any): ByteArray","description":"io.github.uinnn.database.columns.ProtocolBufferColumnType.notNullValueToDB","location":"database-framework/io.github.uinnn.database.columns/-protocol-buffer-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: Any): ByteArray","io.github.uinnn.database.columns.ProtocolBufferColumnType.notNullValueToDB"]},{"name":"open override fun notNullValueToDB(value: Any): String","description":"io.github.uinnn.database.columns.JsonColumnType.notNullValueToDB","location":"database-framework/io.github.uinnn.database.columns/-json-column-type/not-null-value-to-d-b.html","searchKeys":["notNullValueToDB","open override fun notNullValueToDB(value: Any): String","io.github.uinnn.database.columns.JsonColumnType.notNullValueToDB"]},{"name":"open override fun sqlType(): String","description":"io.github.uinnn.database.columns.JsonTextColumnType.sqlType","location":"database-framework/io.github.uinnn.database.columns/-json-text-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","io.github.uinnn.database.columns.JsonTextColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"io.github.uinnn.database.columns.JsonVarcharColumnType.sqlType","location":"database-framework/io.github.uinnn.database.columns/-json-varchar-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","io.github.uinnn.database.columns.JsonVarcharColumnType.sqlType"]},{"name":"open override fun sqlType(): String","description":"io.github.uinnn.database.columns.ProtocolBufferLimitedColumnType.sqlType","location":"database-framework/io.github.uinnn.database.columns/-protocol-buffer-limited-column-type/sql-type.html","searchKeys":["sqlType","open override fun sqlType(): String","io.github.uinnn.database.columns.ProtocolBufferLimitedColumnType.sqlType"]},{"name":"open override fun validateValueBeforeUpdate(value: Any?)","description":"io.github.uinnn.database.columns.ProtocolBufferLimitedColumnType.validateValueBeforeUpdate","location":"database-framework/io.github.uinnn.database.columns/-protocol-buffer-limited-column-type/validate-value-before-update.html","searchKeys":["validateValueBeforeUpdate","open override fun validateValueBeforeUpdate(value: Any?)","io.github.uinnn.database.columns.ProtocolBufferLimitedColumnType.validateValueBeforeUpdate"]},{"name":"open override fun valueFromDB(value: Any): T","description":"io.github.uinnn.database.columns.JsonColumnType.valueFromDB","location":"database-framework/io.github.uinnn.database.columns/-json-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): T","io.github.uinnn.database.columns.JsonColumnType.valueFromDB"]},{"name":"open override fun valueFromDB(value: Any): T","description":"io.github.uinnn.database.columns.ProtocolBufferColumnType.valueFromDB","location":"database-framework/io.github.uinnn.database.columns/-protocol-buffer-column-type/value-from-d-b.html","searchKeys":["valueFromDB","open override fun valueFromDB(value: Any): T","io.github.uinnn.database.columns.ProtocolBufferColumnType.valueFromDB"]},{"name":"open override val config: HikariConfig","description":"io.github.uinnn.database.H2Prototype.config","location":"database-framework/io.github.uinnn.database/-h2-prototype/config.html","searchKeys":["config","open override val config: HikariConfig","io.github.uinnn.database.H2Prototype.config"]},{"name":"open override val config: HikariConfig","description":"io.github.uinnn.database.MySQLPrototype.config","location":"database-framework/io.github.uinnn.database/-my-s-q-l-prototype/config.html","searchKeys":["config","open override val config: HikariConfig","io.github.uinnn.database.MySQLPrototype.config"]},{"name":"open override val config: HikariConfig","description":"io.github.uinnn.database.PostgrePrototype.config","location":"database-framework/io.github.uinnn.database/-postgre-prototype/config.html","searchKeys":["config","open override val config: HikariConfig","io.github.uinnn.database.PostgrePrototype.config"]},{"name":"open override val config: HikariConfig","description":"io.github.uinnn.database.SQLitePrototype.config","location":"database-framework/io.github.uinnn.database/-s-q-lite-prototype/config.html","searchKeys":["config","open override val config: HikariConfig","io.github.uinnn.database.SQLitePrototype.config"]},{"name":"open override val coroutineContext: CoroutineContext","description":"io.github.uinnn.database.common.DatabaseScope.coroutineContext","location":"database-framework/io.github.uinnn.database.common/-database-scope/coroutine-context.html","searchKeys":["coroutineContext","open override val coroutineContext: CoroutineContext","io.github.uinnn.database.common.DatabaseScope.coroutineContext"]},{"name":"open override val database: Database","description":"io.github.uinnn.database.AbstractDatabasePrototype.database","location":"database-framework/io.github.uinnn.database/-abstract-database-prototype/database.html","searchKeys":["database","open override val database: Database","io.github.uinnn.database.AbstractDatabasePrototype.database"]},{"name":"open override val database: Database","description":"io.github.uinnn.database.common.AbstractTableManager.database","location":"database-framework/io.github.uinnn.database.common/-abstract-table-manager/database.html","searchKeys":["database","open override val database: Database","io.github.uinnn.database.common.AbstractTableManager.database"]},{"name":"open override val source: DataSource","description":"io.github.uinnn.database.AbstractDatabasePrototype.source","location":"database-framework/io.github.uinnn.database/-abstract-database-prototype/source.html","searchKeys":["source","open override val source: DataSource","io.github.uinnn.database.AbstractDatabasePrototype.source"]},{"name":"open override val table: Table","description":"io.github.uinnn.database.common.AbstractTableManager.table","location":"database-framework/io.github.uinnn.database.common/-abstract-table-manager/table.html","searchKeys":["table","open override val table: Table","io.github.uinnn.database.common.AbstractTableManager.table"]},{"name":"open override val type: DatabaseType","description":"io.github.uinnn.database.AbstractDatabasePrototype.type","location":"database-framework/io.github.uinnn.database/-abstract-database-prototype/type.html","searchKeys":["type","open override val type: DatabaseType","io.github.uinnn.database.AbstractDatabasePrototype.type"]},{"name":"open override var databaseName: String","description":"io.github.uinnn.database.AbstractServerDatabasePrototype.databaseName","location":"database-framework/io.github.uinnn.database/-abstract-server-database-prototype/database-name.html","searchKeys":["databaseName","open override var databaseName: String","io.github.uinnn.database.AbstractServerDatabasePrototype.databaseName"]},{"name":"open override var file: File","description":"io.github.uinnn.database.AbstractLocalDatabasePrototype.file","location":"database-framework/io.github.uinnn.database/-abstract-local-database-prototype/file.html","searchKeys":["file","open override var file: File","io.github.uinnn.database.AbstractLocalDatabasePrototype.file"]},{"name":"open override var host: String","description":"io.github.uinnn.database.AbstractServerDatabasePrototype.host","location":"database-framework/io.github.uinnn.database/-abstract-server-database-prototype/host.html","searchKeys":["host","open override var host: String","io.github.uinnn.database.AbstractServerDatabasePrototype.host"]},{"name":"open override var password: String","description":"io.github.uinnn.database.AbstractServerDatabasePrototype.password","location":"database-framework/io.github.uinnn.database/-abstract-server-database-prototype/password.html","searchKeys":["password","open override var password: String","io.github.uinnn.database.AbstractServerDatabasePrototype.password"]},{"name":"open override var port: Int = 3306","description":"io.github.uinnn.database.AbstractServerDatabasePrototype.port","location":"database-framework/io.github.uinnn.database/-abstract-server-database-prototype/port.html","searchKeys":["port","open override var port: Int = 3306","io.github.uinnn.database.AbstractServerDatabasePrototype.port"]},{"name":"open override var useSSl: Boolean = false","description":"io.github.uinnn.database.AbstractServerDatabasePrototype.useSSl","location":"database-framework/io.github.uinnn.database/-abstract-server-database-prototype/use-s-sl.html","searchKeys":["useSSl","open override var useSSl: Boolean = false","io.github.uinnn.database.AbstractServerDatabasePrototype.useSSl"]},{"name":"open override var username: String","description":"io.github.uinnn.database.AbstractServerDatabasePrototype.username","location":"database-framework/io.github.uinnn.database/-abstract-server-database-prototype/username.html","searchKeys":["username","open override var username: String","io.github.uinnn.database.AbstractServerDatabasePrototype.username"]},{"name":"operator fun <K, T : Entity<*>> TableManager<K, *, T>.get(key: K): T","description":"io.github.uinnn.database.common.get","location":"database-framework/io.github.uinnn.database.common/get.html","searchKeys":["get","operator fun <K, T : Entity<*>> TableManager<K, *, T>.get(key: K): T","io.github.uinnn.database.common.get"]},{"name":"operator fun <K> TableManager<K, *, *>.contains(key: K): Boolean","description":"io.github.uinnn.database.common.contains","location":"database-framework/io.github.uinnn.database.common/contains.html","searchKeys":["contains","operator fun <K> TableManager<K, *, *>.contains(key: K): Boolean","io.github.uinnn.database.common.contains"]},{"name":"suspend fun <T> manage(database: Database, action: Management<T>): T","description":"io.github.uinnn.database.common.DatabaseScope.manage","location":"database-framework/io.github.uinnn.database.common/-database-scope/manage.html","searchKeys":["manage","suspend fun <T> manage(database: Database, action: Management<T>): T","io.github.uinnn.database.common.DatabaseScope.manage"]},{"name":"val driver: String","description":"io.github.uinnn.database.DatabaseType.H2.driver","location":"database-framework/io.github.uinnn.database/-database-type/-h2/driver.html","searchKeys":["driver","val driver: String","io.github.uinnn.database.DatabaseType.H2.driver"]},{"name":"val driver: String","description":"io.github.uinnn.database.DatabaseType.MYSQL.driver","location":"database-framework/io.github.uinnn.database/-database-type/-m-y-s-q-l/driver.html","searchKeys":["driver","val driver: String","io.github.uinnn.database.DatabaseType.MYSQL.driver"]},{"name":"val driver: String","description":"io.github.uinnn.database.DatabaseType.POSTGRE.driver","location":"database-framework/io.github.uinnn.database/-database-type/-p-o-s-t-g-r-e/driver.html","searchKeys":["driver","val driver: String","io.github.uinnn.database.DatabaseType.POSTGRE.driver"]},{"name":"val driver: String","description":"io.github.uinnn.database.DatabaseType.SQLITE.driver","location":"database-framework/io.github.uinnn.database/-database-type/-s-q-l-i-t-e/driver.html","searchKeys":["driver","val driver: String","io.github.uinnn.database.DatabaseType.SQLITE.driver"]},{"name":"val driver: String","description":"io.github.uinnn.database.DatabaseType.driver","location":"database-framework/io.github.uinnn.database/-database-type/driver.html","searchKeys":["driver","val driver: String","io.github.uinnn.database.DatabaseType.driver"]},{"name":"val isLocalType: Boolean","description":"io.github.uinnn.database.DatabaseType.H2.isLocalType","location":"database-framework/io.github.uinnn.database/-database-type/-h2/is-local-type.html","searchKeys":["isLocalType","val isLocalType: Boolean","io.github.uinnn.database.DatabaseType.H2.isLocalType"]},{"name":"val isLocalType: Boolean","description":"io.github.uinnn.database.DatabaseType.MYSQL.isLocalType","location":"database-framework/io.github.uinnn.database/-database-type/-m-y-s-q-l/is-local-type.html","searchKeys":["isLocalType","val isLocalType: Boolean","io.github.uinnn.database.DatabaseType.MYSQL.isLocalType"]},{"name":"val isLocalType: Boolean","description":"io.github.uinnn.database.DatabaseType.POSTGRE.isLocalType","location":"database-framework/io.github.uinnn.database/-database-type/-p-o-s-t-g-r-e/is-local-type.html","searchKeys":["isLocalType","val isLocalType: Boolean","io.github.uinnn.database.DatabaseType.POSTGRE.isLocalType"]},{"name":"val isLocalType: Boolean","description":"io.github.uinnn.database.DatabaseType.SQLITE.isLocalType","location":"database-framework/io.github.uinnn.database/-database-type/-s-q-l-i-t-e/is-local-type.html","searchKeys":["isLocalType","val isLocalType: Boolean","io.github.uinnn.database.DatabaseType.SQLITE.isLocalType"]},{"name":"val isLocalType: Boolean","description":"io.github.uinnn.database.DatabaseType.isLocalType","location":"database-framework/io.github.uinnn.database/-database-type/is-local-type.html","searchKeys":["isLocalType","val isLocalType: Boolean","io.github.uinnn.database.DatabaseType.isLocalType"]},{"name":"val isServerType: Boolean","description":"io.github.uinnn.database.DatabaseType.H2.isServerType","location":"database-framework/io.github.uinnn.database/-database-type/-h2/is-server-type.html","searchKeys":["isServerType","val isServerType: Boolean","io.github.uinnn.database.DatabaseType.H2.isServerType"]},{"name":"val isServerType: Boolean","description":"io.github.uinnn.database.DatabaseType.MYSQL.isServerType","location":"database-framework/io.github.uinnn.database/-database-type/-m-y-s-q-l/is-server-type.html","searchKeys":["isServerType","val isServerType: Boolean","io.github.uinnn.database.DatabaseType.MYSQL.isServerType"]},{"name":"val isServerType: Boolean","description":"io.github.uinnn.database.DatabaseType.POSTGRE.isServerType","location":"database-framework/io.github.uinnn.database/-database-type/-p-o-s-t-g-r-e/is-server-type.html","searchKeys":["isServerType","val isServerType: Boolean","io.github.uinnn.database.DatabaseType.POSTGRE.isServerType"]},{"name":"val isServerType: Boolean","description":"io.github.uinnn.database.DatabaseType.SQLITE.isServerType","location":"database-framework/io.github.uinnn.database/-database-type/-s-q-l-i-t-e/is-server-type.html","searchKeys":["isServerType","val isServerType: Boolean","io.github.uinnn.database.DatabaseType.SQLITE.isServerType"]},{"name":"val isServerType: Boolean","description":"io.github.uinnn.database.DatabaseType.isServerType","location":"database-framework/io.github.uinnn.database/-database-type/is-server-type.html","searchKeys":["isServerType","val isServerType: Boolean","io.github.uinnn.database.DatabaseType.isServerType"]},{"name":"val length: Int","description":"io.github.uinnn.database.columns.JsonVarcharColumnType.length","location":"database-framework/io.github.uinnn.database.columns/-json-varchar-column-type/length.html","searchKeys":["length","val length: Int","io.github.uinnn.database.columns.JsonVarcharColumnType.length"]},{"name":"val length: Int","description":"io.github.uinnn.database.columns.ProtocolBufferLimitedColumnType.length","location":"database-framework/io.github.uinnn.database.columns/-protocol-buffer-limited-column-type/length.html","searchKeys":["length","val length: Int","io.github.uinnn.database.columns.ProtocolBufferLimitedColumnType.length"]},{"name":"val name: String","description":"io.github.uinnn.database.DatabaseType.H2.name","location":"database-framework/io.github.uinnn.database/-database-type/-h2/name.html","searchKeys":["name","val name: String","io.github.uinnn.database.DatabaseType.H2.name"]},{"name":"val name: String","description":"io.github.uinnn.database.DatabaseType.MYSQL.name","location":"database-framework/io.github.uinnn.database/-database-type/-m-y-s-q-l/name.html","searchKeys":["name","val name: String","io.github.uinnn.database.DatabaseType.MYSQL.name"]},{"name":"val name: String","description":"io.github.uinnn.database.DatabaseType.POSTGRE.name","location":"database-framework/io.github.uinnn.database/-database-type/-p-o-s-t-g-r-e/name.html","searchKeys":["name","val name: String","io.github.uinnn.database.DatabaseType.POSTGRE.name"]},{"name":"val name: String","description":"io.github.uinnn.database.DatabaseType.SQLITE.name","location":"database-framework/io.github.uinnn.database/-database-type/-s-q-l-i-t-e/name.html","searchKeys":["name","val name: String","io.github.uinnn.database.DatabaseType.SQLITE.name"]},{"name":"val ordinal: Int","description":"io.github.uinnn.database.DatabaseType.H2.ordinal","location":"database-framework/io.github.uinnn.database/-database-type/-h2/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.uinnn.database.DatabaseType.H2.ordinal"]},{"name":"val ordinal: Int","description":"io.github.uinnn.database.DatabaseType.MYSQL.ordinal","location":"database-framework/io.github.uinnn.database/-database-type/-m-y-s-q-l/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.uinnn.database.DatabaseType.MYSQL.ordinal"]},{"name":"val ordinal: Int","description":"io.github.uinnn.database.DatabaseType.POSTGRE.ordinal","location":"database-framework/io.github.uinnn.database/-database-type/-p-o-s-t-g-r-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.uinnn.database.DatabaseType.POSTGRE.ordinal"]},{"name":"val ordinal: Int","description":"io.github.uinnn.database.DatabaseType.SQLITE.ordinal","location":"database-framework/io.github.uinnn.database/-database-type/-s-q-l-i-t-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int","io.github.uinnn.database.DatabaseType.SQLITE.ordinal"]},{"name":"val serialType: KSerializer<Any>","description":"io.github.uinnn.database.columns.JsonColumnType.serialType","location":"database-framework/io.github.uinnn.database.columns/-json-column-type/serial-type.html","searchKeys":["serialType","val serialType: KSerializer<Any>","io.github.uinnn.database.columns.JsonColumnType.serialType"]},{"name":"val serialType: KSerializer<Any>","description":"io.github.uinnn.database.columns.ProtocolBufferColumnType.serialType","location":"database-framework/io.github.uinnn.database.columns/-protocol-buffer-column-type/serial-type.html","searchKeys":["serialType","val serialType: KSerializer<Any>","io.github.uinnn.database.columns.ProtocolBufferColumnType.serialType"]},{"name":"var database: String","description":"io.github.uinnn.database.SerialPrototype.database","location":"database-framework/io.github.uinnn.database/-serial-prototype/database.html","searchKeys":["database","var database: String","io.github.uinnn.database.SerialPrototype.database"]},{"name":"var host: String","description":"io.github.uinnn.database.SerialPrototype.host","location":"database-framework/io.github.uinnn.database/-serial-prototype/host.html","searchKeys":["host","var host: String","io.github.uinnn.database.SerialPrototype.host"]},{"name":"var password: String","description":"io.github.uinnn.database.SerialPrototype.password","location":"database-framework/io.github.uinnn.database/-serial-prototype/password.html","searchKeys":["password","var password: String","io.github.uinnn.database.SerialPrototype.password"]},{"name":"var port: Int = 3306","description":"io.github.uinnn.database.SerialPrototype.port","location":"database-framework/io.github.uinnn.database/-serial-prototype/port.html","searchKeys":["port","var port: Int = 3306","io.github.uinnn.database.SerialPrototype.port"]},{"name":"var type: DatabaseType","description":"io.github.uinnn.database.SerialPrototype.type","location":"database-framework/io.github.uinnn.database/-serial-prototype/type.html","searchKeys":["type","var type: DatabaseType","io.github.uinnn.database.SerialPrototype.type"]},{"name":"var useSSL: Boolean = false","description":"io.github.uinnn.database.SerialPrototype.useSSL","location":"database-framework/io.github.uinnn.database/-serial-prototype/use-s-s-l.html","searchKeys":["useSSL","var useSSL: Boolean = false","io.github.uinnn.database.SerialPrototype.useSSL"]},{"name":"var username: String","description":"io.github.uinnn.database.SerialPrototype.username","location":"database-framework/io.github.uinnn.database/-serial-prototype/username.html","searchKeys":["username","var username: String","io.github.uinnn.database.SerialPrototype.username"]}]
